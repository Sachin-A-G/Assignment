def deleteNode(node):
    if node is None or node.next is None:
        return

    next_node = node.next
    node.data = next_node.data
    node.next = next_node.next


3.
If the node to be deleted is the tail node, this method won't work. You need access to the previous node to delete the tail node in a singly linked list.
If the node to be deleted is None, you can handle it as a no-op or raise an error based on your requirements.

4.Time Complexity=O(1)
